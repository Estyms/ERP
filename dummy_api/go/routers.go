/*
 * Medical Records API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * API version: 1.0.0
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */
package swagger

import (
	"fmt"
	"net/http"
	"strings"

	"github.com/gorilla/mux"
)

type Route struct {
	Name        string
	Method      string
	Pattern     string
	HandlerFunc http.HandlerFunc
}

type Routes []Route

func NewRouter() *mux.Router {
	router := mux.NewRouter().StrictSlash(true)
	for _, route := range routes {
		var handler http.Handler
		handler = route.HandlerFunc
		handler = Logger(handler, route.Name)

		router.
			Methods(route.Method).
			Path(route.Pattern).
			Name(route.Name).
			Handler(handler)
	}

	return router
}

func Index(w http.ResponseWriter, r *http.Request) {
	fmt.Fprintf(w, "Hello World!")
}

var routes = Routes{
	Route{
		"Index",
		"GET",
		"/",
		Index,
	},

	Route{
		"HospitalGet",
		strings.ToUpper("Get"),
		"/hospital",
		HospitalGet,
	},

	Route{
		"HospitalIdDelete",
		strings.ToUpper("Delete"),
		"/hospital/{id}",
		HospitalIdDelete,
	},

	Route{
		"HospitalIdGet",
		strings.ToUpper("Get"),
		"/hospital/{id}",
		HospitalIdGet,
	},

	Route{
		"HospitalIdPut",
		strings.ToUpper("Put"),
		"/hospital/{id}",
		HospitalIdPut,
	},

	Route{
		"HospitalPost",
		strings.ToUpper("Post"),
		"/hospital",
		HospitalPost,
	},

	Route{
		"MedicalActGet",
		strings.ToUpper("Get"),
		"/medical_act",
		MedicalActGet,
	},

	Route{
		"MedicalActIdDelete",
		strings.ToUpper("Delete"),
		"/medical_act/{id}",
		MedicalActIdDelete,
	},

	Route{
		"MedicalActIdGet",
		strings.ToUpper("Get"),
		"/medical_act/{id}",
		MedicalActIdGet,
	},

	Route{
		"MedicalActIdPut",
		strings.ToUpper("Put"),
		"/medical_act/{id}",
		MedicalActIdPut,
	},

	Route{
		"MedicalActPost",
		strings.ToUpper("Post"),
		"/medical_act",
		MedicalActPost,
	},

	Route{
		"MedicalActUserIdGet",
		strings.ToUpper("Get"),
		"/medical_act/user/{id}",
		MedicalActUserIdGet,
	},

	Route{
		"MedicalActIdResultsGet",
		strings.ToUpper("Get"),
		"/medical_act/{id}/results",
		MedicalActIdResultsGet,
	},

	Route{
		"MedicalActIdResultsPost",
		strings.ToUpper("Post"),
		"/medical_act/{id}/results",
		MedicalActIdResultsPost,
	},

	Route{
		"MedicalActIdResultsResultIdDelete",
		strings.ToUpper("Delete"),
		"/medical_act/{id}/results/{result_id}",
		MedicalActIdResultsResultIdDelete,
	},

	Route{
		"MedicalActIdResultsResultIdGet",
		strings.ToUpper("Get"),
		"/medical_act/{id}/results/{result_id}",
		MedicalActIdResultsResultIdGet,
	},

	Route{
		"MedicalActIdResultsResultIdPut",
		strings.ToUpper("Put"),
		"/medical_act/{id}/results/{result_id}",
		MedicalActIdResultsResultIdPut,
	},

	Route{
		"MutuelleGet",
		strings.ToUpper("Get"),
		"/mutuelle",
		MutuelleGet,
	},

	Route{
		"MutuelleIdDelete",
		strings.ToUpper("Delete"),
		"/mutuelle/{id}",
		MutuelleIdDelete,
	},

	Route{
		"MutuelleIdGet",
		strings.ToUpper("Get"),
		"/mutuelle/{id}",
		MutuelleIdGet,
	},

	Route{
		"MutuelleIdPut",
		strings.ToUpper("Put"),
		"/mutuelle/{id}",
		MutuelleIdPut,
	},

	Route{
		"MutuellePost",
		strings.ToUpper("Post"),
		"/mutuelle",
		MutuellePost,
	},

	Route{
		"UserAuthPost",
		strings.ToUpper("Post"),
		"/user/auth",
		UserAuthPost,
	},

	Route{
		"UserGet",
		strings.ToUpper("Get"),
		"/user",
		UserGet,
	},

	Route{
		"UserGraulandeIdGet",
		strings.ToUpper("Get"),
		"/user/graulande/{id}",
		UserGraulandeIdGet,
	},

	Route{
		"UserIdDelete",
		strings.ToUpper("Delete"),
		"/user/{id}",
		UserIdDelete,
	},

	Route{
		"UserIdGet",
		strings.ToUpper("Get"),
		"/user/{id}",
		UserIdGet,
	},

	Route{
		"UserIdPut",
		strings.ToUpper("Put"),
		"/user/{id}",
		UserIdPut,
	},

	Route{
		"UserPost",
		strings.ToUpper("Post"),
		"/user",
		UserPost,
	},
}
